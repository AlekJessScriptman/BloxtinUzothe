-- Chinatip Hub V1 (PvP Script for Blox Fruits with Advanced Features)

-- SERVICES --
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")
local VirtualInputManager = game:GetService("VirtualInputManager")

-- UI SETUP (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) --
local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
gui.Name = "ChinatipHubV1"
gui.ResetOnSpawn = false

local toggleBtn = Instance.new("TextButton", gui)
toggleBtn.Size = UDim2.new(0, 120, 0, 30)
toggleBtn.Position = UDim2.new(0, 20, 0.05, 0)
toggleBtn.Text = "Hide Menu"
toggleBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.Gotham

local scrollFrame = Instance.new("ScrollingFrame", gui)
scrollFrame.Size = UDim2.new(0, 350, 0, 550)
scrollFrame.Position = UDim2.new(0, 20, 0.2, 0)
scrollFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
scrollFrame.BorderSizePixel = 0
scrollFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
scrollFrame.CanvasSize = UDim2.new(0, 0, 5, 0)
scrollFrame.ScrollBarThickness = 6
scrollFrame.ClipsDescendants = true
scrollFrame.Active = true

scrollFrame.Visible = true
toggleBtn.MouseButton1Click:Connect(function()
    scrollFrame.Visible = not scrollFrame.Visible
    toggleBtn.Text = scrollFrame.Visible and "Hide Menu" or "Show Menu"
end)

-- DRAG SUPPORT (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) --
local dragging, dragStart, startPos
scrollFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = scrollFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then dragging = false end
        end)
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStart
        scrollFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- CONTAINER & LAYOUT --
local container = Instance.new("Frame", scrollFrame)
container.Size = UDim2.new(1, 0, 0, 3000)
container.BackgroundTransparency = 1
local layout = Instance.new("UIListLayout", container)
layout.Padding = UDim.new(0, 6)
layout.SortOrder = Enum.SortOrder.LayoutOrder

-- UI FUNCTIONS --
local function createLabel(text)
    local lbl = Instance.new("TextLabel", container)
    lbl.Size = UDim2.new(1, -20, 0, 26)
    lbl.Text = text
    lbl.Font = Enum.Font.GothamBold
    lbl.TextSize = 16
    lbl.TextColor3 = Color3.new(1, 1, 1)
    lbl.BackgroundTransparency = 1
end

local function createToggleButton(text, callback)
    local toggled = false
    local btn = Instance.new("TextButton", container)
    btn.Size = UDim2.new(1, -20, 0, 32)
    btn.Text = "[OFF] " .. text
    btn.Font = Enum.Font.Gotham
    btn.TextSize = 14
    btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.MouseButton1Click:Connect(function()
        toggled = not toggled
        btn.Text = (toggled and "[ON] " or "[OFF] ") .. text
        pcall(callback, toggled)
    end)
    return btn
end

-- STATES --
local keyStates = {
    Z = {toggle = false, hold = false},
    X = {toggle = false, hold = false},
    C = {toggle = false, hold = false},
    V = {toggle = false, hold = false},
    F = {toggle = false, hold = false},
    Tap = {toggle = false, hold = false} -- Tap ‡∏Ñ‡∏∑‡∏≠‡∏Å‡∏î‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ã‡πâ‡∏≤‡∏¢ (M1)
}

-- UI SETUP KEYBINDS --
createLabel("üîò Auto Skill Keys")

for _, key in ipairs({"Z", "X", "C", "V", "F", "Tap"}) do
    createToggleButton("Auto Press " .. key, function(on)
        keyStates[key].toggle = on
    end)
    createToggleButton("Hold " .. key, function(on)
        keyStates[key].hold = on
    end)
end

-- HELPER FUNCTION FOR VIRTUAL INPUT --
local function pressKey(keyCode)
    VirtualInputManager:SendKeyEvent(true, keyCode, false, nil)
end

local function releaseKey(keyCode)
    VirtualInputManager:SendKeyEvent(false, keyCode, false, nil)
end

-- HELPER FUNCTION TO CLICK MOUSE LEFT BUTTON (Tap) --
local mouseDown = false
local function mousePress()
    if not mouseDown then
        mouseDown = true
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, true, nil, 0)
    end
end

local function mouseRelease()
    if mouseDown then
        mouseDown = false
        VirtualInputManager:SendMouseButtonEvent(0, 0, 0, false, nil, 0)
    end
end

-- MAIN LOOP --
RunService.Heartbeat:Connect(function()
    for key, state in pairs(keyStates) do
        if state.toggle then
            if key == "Tap" then
                -- Tap = ‡∏Ñ‡∏•‡∏¥‡∏Å‡πÄ‡∏°‡∏≤‡∏™‡πå‡∏ã‡πâ‡∏≤‡∏¢‡πÇ‡∏à‡∏°‡∏ï‡∏µ (M1)
                if state.hold then
                    -- ‡∏Å‡∏î‡∏Ñ‡πâ‡∏≤‡∏á
                    mousePress()
                else
                    -- ‡∏Å‡∏î‡πÅ‡∏Ñ‡πà‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡πÅ‡∏•‡πâ‡∏ß‡∏õ‡∏•‡πà‡∏≠‡∏¢
                    mousePress()
                    task.wait(0.05)
                    mouseRelease()
                end
            else
                -- ‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡∏µ‡∏¢‡πå‡∏ö‡∏≠‡∏£‡πå‡∏î‡∏≠‡∏∑‡πà‡∏ô ‡πÜ
                local keyCode = Enum.KeyCode[key]
                if state.hold then
                    pressKey(keyCode)
                else
                    pressKey(keyCode)
                    task.wait(0.05)
                    releaseKey(keyCode)
                end
            end
        else
            -- ‡∏ñ‡πâ‡∏≤ toggle ‡∏õ‡∏¥‡∏î ‡∏ï‡πâ‡∏≠‡∏á‡∏õ‡∏•‡πà‡∏≠‡∏¢‡∏õ‡∏∏‡πà‡∏°‡∏Ñ‡πâ‡∏≤‡∏á‡πÑ‡∏ß‡πâ
            if state.hold then
                if key == "Tap" then
                    mouseRelease()
                else
                    releaseKey(Enum.KeyCode[key])
                end
                state.hold = false -- ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ hold
            end
        end
    end
end)

print("‚úÖ Chinatip Hub V1 updated with improved Auto Skill Key & Tap system.")
